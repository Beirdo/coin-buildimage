FROM localhost:5000/coin-buildimage:base
MAINTAINER gjhurlbu@gmail.com

ENV PATH ${PATH}:/opt/cross/bin:/opt/x-tools/pi-crosstool-ng/arm-unknown-linux-gnueabi/bin
ENV CORES ${CORES}

# Setup crosstool-ng for the Raspberry Pi
WORKDIR /tmp/src
RUN wget http://build-artifacts.mycryptocoins.net/crosstool-ng-1.23.0.tar.xz
RUN tar -xvf crosstool-ng-1.23.0.tar.xz
WORKDIR /tmp/src/crosstool-ng-1.23.0
RUN ./configure --prefix=/opt/cross
RUN make -j${CORES}
RUN make install

# Setup crosstool-ng for Raspberry Pi
WORKDIR /tmp/src/crosstool-pi
ADD crosstool-ng-config-pi .config
RUN ct-ng oldconfig
RUN ct-ng build

# Setup boost for Raspberry Pi
WORKDIR /tmp/src
RUN wget http://build-artifacts.mycryptocoins.net/boost_1_65_1.tar.bz2
RUN tar -xvf boost_1_65_1.tar.bz2
WORKDIR /tmp/src/boost_1_65_1
RUN ./bootstrap.sh
ADD boost-project-config-rpi.jam project-config.jam
RUN ./bjam install toolset=gcc-arm --prefix=/opt/x-tools/rpi link=static \
	variant=release threading=multi -a -q --reconfigure --without-python

# Build Berkeley DB 4.8 for Raspberry Pi
WORKDIR /tmp/src
RUN wget http://build-artifacts.mycryptocoins.net/db-4.8.30.NC.tar.gz
RUN tar -xvf db-4.8.30.NC.tar.gz
WORKDIR /tmp/src/db-4.8.30.NC/rpi-build
RUN ../dist/configure --host=arm-unknown-linux-gnueabi \
	--prefix=/opt/x-tools/rpi --disable-shared \
	--disable-replication --enable-cxx
RUN make -j${CORES}
RUN make install

# Build openssl for Raspberry Pi
WORKDIR /tmp/src
RUN wget http://build-artifacts.mycryptocoins.net/openssl-1.0.2l.tar.gz
RUN tar -xvf openssl-1.0.2l.tar.gz
WORKDIR /tmp/src/openssl-1.0.2l
ENV CROSS_COMPILE arm-unknown-linux-gnueabi-
RUN ./Configure --cross-compile-prefix=arm-unknown-linux-gnueabi- \
	--prefix=/opt/x-tools/rpi linux-armv4
RUN make #-j${CORES}
RUN make install

# Build zlib for Raspberry Pi
WORKDIR /tmp/src
RUN wget http://build-artifacts.mycryptocoins.net/zlib-1.2.11.tar.gz
RUN tar -xvf zlib-1.2.11.tar.gz
WORKDIR /tmp/src/zlib-1.2.11
RUN TARGETMACH=arm-none-linux-gnueabi BUILDMACH=i686-pc-linux-gnu \
	CROSS=arm-none-linux-gnueabi CC=${CROSS_COMPILE}gcc \
	LD=${CROSS_COMPILE}ld AS=${CROSS_COMPILE}-as \
	./configure --prefix=/opt/x-tools/rpi
RUN make -j${CORES}
RUN make install

# Build miniupnpc for Raspberry Pi
WORKDIR /tmp/src
RUN wget http://build-artifacts.mycryptocoins.net/miniupnpc-1.9.20140610.tar.gz
RUN tar -xvvf miniupnpc-1.9.20140610.tar.gz
WORKDIR /tmp/src/miniupnpc-1.9.20140610
RUN CC=${CROSS_COMPILE}gcc make -j${CORES}
RUN INSTALLPREFIX=/opt/x-tools/rpi make install

# Cleanup
WORKDIR /
RUN rm -rf /tmp ; mkdir /tmp ; chmod 1777 /tmp
