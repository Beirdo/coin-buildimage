calc=$(shell echo $$\(\($(1)\)\))
TOTALCORES := $(shell nproc)
CORES := $(call calc,"${TOTALCORES} * 3 / 4")
export CORES

include Makefile.def

.PHONY:	force

CP := cp
RM := rm

ECR := 890058568674.dkr.ecr.us-west-2.amazonaws.com

all:	sources done

ifneq (${CROSSBUILD},1)
COPY_FILES := Makefile.sources

DEPS := ${COPY_FILES} Dockerfile boost-project-config.jam

${COPY_FILES}: %: ../%
	${CP} $< $@

Dockerfile:	../Dockerfile.image
	${CP} $< $@

boost-project-config.jam:	../boost-project-config.jam.in Makefile.def
	cat ../boost-project-config.jam.in | \
		sed -e 's/@BOOST_ARCH@/${BOOST_ARCH}/g' \
			-e 's/@CROSS_TRIPLE@/${CROSS_TRIPLE}/g' > $@
endif

done:	${DEPS} image squash push
	touch $@

image:	$(FORCE) Makefile Makefile.def ../Makefile.common Dockerfile
	@echo Using -j${CORES}
	docker build -t coin-buildimage:${IMAGE} -f Dockerfile \
	       --build-arg=CROSS_TRIPLE=${CROSS_TRIPLE} ${CACHE} .
	touch $@

CONTAINER = $(shell docker container create coin-buildimage:${IMAGE})

squash:	$(FORCE) image
	docker export -o /tmp/docker-dump.tar ${CONTAINER}
	docker import /tmp/docker-dump.tar \
		localhost:5000/coin-buildimage:${IMAGE}
	rm /tmp/docker-dump.tar
	touch $@

push:	$(FORCE) squash
	docker push localhost:5000/coin-buildimage:${IMAGE}
	docker tag localhost:5000/coin-buildimage:${IMAGE} \
		${ECR}/coin-buildimage:${IMAGE}
	docker push ${ECR}/coin-buildimage:${IMAGE}
	touch $@

sources::
	
clean:	force
	-${RM} -f ${DEPS} done
